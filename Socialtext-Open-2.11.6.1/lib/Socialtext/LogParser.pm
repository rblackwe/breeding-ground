package Socialtext::LogParser;

use strict;
use warnings;

=head1 NAME

Socialtext::LogParser - Parses the logs generated by the application

=head1 SYNOPSIS

    my %parsed = Socialtext::LogParser->parse_log_line($line);

=head1 DESCRIPTION

This module provides methods for parsing the logs that the Socialtext
application generates (via syslog, typically).

=head1 METHODS

=head2 parse_log_line($line)

Given a line from the log, this method parses the line and returns a
hash of the data it finds.

Right now, this only parses log lines for "action logging", such as
logging of displaying or editing a page.

The returned hash has four keys:

=over 4

=item * action

An action such as "DISPLAY_PAGE" or "UPLOAD_ATTACHMENT".

=item * workspace_name

This is the name, not an id.

=item * page_id

The page id.

=item * user_id

In newer logs, this is an id, but in older logs this might be an email
address.

=item * attachment_id

This will only be present if the action is related to attachments.

=back

=cut

sub parse_log_line {
    my %parsed;
    if ( $_[1] =~ m/^
                    (\w+\s+        # month name
                     \d+\s+        # day digit(s)
                     [\d:]+        # time
                    )
                    \s+
                    \S+\s+        # hostname
                    \S+\s+        # syslog ident and pid
                    \S+\s+        # uid
                    (\S+)\s+:\s+  # action
                    (\S+)\s+:\s+  # workspace name
                    (\S+)\s+:\s+  # page id
                    (\S+)         # user id (or email address in old logs)
                    (?:           # optional extra bits for attachments only
                      \s+:\s+
                      (.+)        # attachment id
                    )?
                    \s*
                    $
                   /x ) {
        @parsed{qw( date action workspace_name page_id user_id attachment_id )
            } = ( $1, $2, $3, $4, $5, $6 );

        # The lines all seem to end with trailing whitespace
        s/\s+// for grep { defined } @parsed{ qw( user_id attachment_id ) };
    }

    return %parsed;
}


1;

=head1 AUTHOR

Socialtext, Inc. C<< <code@socialtext.com> >>

=head1 COPYRIGHT & LICENSE

Copyright 2006 Socialtext, Inc., all rights reserved.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

=cut
