#!/usr/bin/env perl
#
# Copyright (C) 2004-2006 by Socialtext, Inc.
#
use warnings;
use strict;

use Getopt::Long;
use Pod::Usage 1.12;
use FindBin;
use lib "$FindBin::Bin/../lib";

my %opts;
GetOptions(
    'h|help|?' => sub { pod2usage( { -verbose => 1, -input => $0 } ); exit },
    'H|man'    => sub { pod2usage( { -verbose => 2, -input => $0 } ); exit },
    'verbose' => \$opts{verbose},
    'dryrun'  => \$opts{dryrun},
) or die;

use Socialtext::Ceqlotron;

my $Pattern = $ARGV[0]
    || sub { pod2usage( { -verbose => 1, -input => $0 } ); exit };

my @Targets;
Socialtext::Ceqlotron::acquire_lock(1) unless $opts{dryrun};
Socialtext::Ceqlotron::foreach_event( \&unlink_if_match );

sub unlink_if_match {
    my $path = $_[0]->link_path;
    my $target = readlink $path;

    if ($target =~ /$Pattern/) {
        if ($opts{dryrun}) {
            warn "would unlink event for $target\n";
        }
        else {
            warn "unlinking event for $target\n" if $opts{verbose};
            unlink $path or warn "unable to unlink $path: $!\n";
        }
    }

}

# XXX This thing could use some tests.

=head1 NAME

ceq-rm - Remove change events in the ceqlotron queue according to perl regexp

=head1 SYNOPSIS

B<ceq-rm 'perl regexp'>

=head1 OPTIONS

    --dryrun    Report on what would be removed, but don't actually remove
    --verbose   Report on each file unlinked
    --help      This help page
    --man       Manual page


=head1 SEE ALSO

L<ceq-stat(1)>, L<ceq-read(1)>, L<ceqlotron(1)>

=cut
